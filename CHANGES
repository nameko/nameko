Release Notes
=============

Here you can see the full list of changes between nameko versions. Versions
are in form of *headline.major.minor* numbers. Backwards-compatible changes
increment the minor version number only.


Unreleased
----------

* Standalone rpc proxies accept a ``caller_name`` parameter to produce more
  semantic ids for the call stack


Version 2.1.0
-------------

Released 2015-04-13

* Changed default AMQP URI so examples work with an unconfigured RabbitMQ.
* Heuristic messages for AMQP connection errors.
* Added six to requirements.
* Minor documentation fixes.


Version 2.0.0
-------------

Released 2015-03-31

* python 3 compatibility
* Added HTTP entrypoints and experimental websocket support (contributed by
  Armin Ronacher)
* Added CLI and console script
* Introduction of nameko "extensions" and nomenclature clarification
* Removal of ``DependencyFactory`` in favour of prototype pattern
* Complete documentation rewrite
* Spun out ``nameko.contrib.sqlalchemy`` into `nameko-sqlalchemy <https://pypi.python.org/pypi/nameko-sqlalchemy>`_ as a **community extension**.
* Spun out ``nameko.legacy`` package into `nameko-nova-compat <https://pypi.python.org/pypi/nameko-nova-compat>`_
* Rename the standalone rpc proxy to
  :class:`~nameko.standalone.rpc.ServiceRpcProxy` and add a
  :class:`~nameko.standalone.rpc.ClusterRpcProxy`, using a single reply queue
  for communicating with multiple remote services.
* Make the standalone event dispatcher more shell-friendly, connecting on
  demand.


Version 1.14.0
--------------

Released 2014-12-19

* Remove parallel provider in favour of async RPC
* Update :func:`~nameko.testing.services.worker_factory` to raise if asked to
  replace a non-existent injection.
* Add various ``__repr__`` methods for better logging
* Support for timeouts in the (non-legacy) standalone RPC proxy
* Add helper for manipulating an AMQP URI into a dict


Version 1.13.0
--------------

Released 2014-12-02

* RPC reply queues now auto-delete.
* Extra protection against badly-behaved dependencies during container kill
* Make legacy :class:`~nameko.legacy.nova.NovaRpcConsumer` more robust against
  failures in the :class:`~nameko.legacy.nova.NovaRpc` provider.


Version 1.12.0
--------------

Released 2014-11-25

* Add ability to make asynchronous rpc calls using the rpc proxy.
* Add a new nameko context key ``user_agent`` to support including such info
  in the rpc header.


Version 1.11.5
--------------

Released 2014-11-18

* Have the standalone rpc proxy mark its reply queues as auto-delete, to stop
  them staying around after use.


Version 1.11.4
--------------

Released 2014-11-10

* Make :class:`~nameko.rpc.RpcConsumer` more robust against failures in the
  :class:`~nameko.rpc.Rpc` provider.
* Add a new exception :class:`~nameko.exceptions.MalformedRequest` that RPC
  providers can raise if they detect an invalid message. Raise this exception
  in the default ``Rpc`` provider if ``args`` or ``kwargs`` keys are missing
  from the message.
* Fix issues in queue consumer tests against non-localhost brokers.
* Upgrade to eventlet 0.15.2.
* Include pyrabbit in ``requirements.txt`` (no longer just for tests).
* Catch dying containers in the entrypoint_hook to avoid hangs.
* Add ``expected_exceptions`` kwarg to the rpc entrypoint to enable different
  exception handling (in dependencies) for user vs system errors.


Version 1.11.3
--------------

Released 2014-10-10

* Add more logging for workers killed by
  :meth:`~nameko.containers.ServiceContainer.kill`.


Version 1.11.2
--------------

Released 2014-09-18

* Add a default implementation for ``acquire_injection`` (returning ``None``)
  for dependency providers that are used for side-effects rather than injecting
  dependencies.


Version 1.11.1
--------------

Released 2014-09-15

* New test helper :func:`~nameko.testing.services.entrypoint_waiter` to wait
  for entrypoints (e.g. event handlers) to complete.


Version 1.11.0
--------------

Released 2014-09-01

* Raise a specific ``RpcTimeout`` error in the RPC proxy rather than
  ``socket.timeout`` to avoid confusing kombu's ``Connection.ensure``
* Improve logging helpers
* Use ``inspect.getcallargs`` instead of shadow lambda for RPC argument
  checking
* Add default retry policies to all publishers
* Stricter handling of connections between tests
* Workarounds for RabbitMQ bugs described at
  https://groups.google.com/d/topic/rabbitmq-users/lrl0tYd1L38/discussion

Version 1.10.1
--------------

Released 2014-08-27

* Inspect the service class (instead of an instance) in
  :func:`~nameko.testing.services.worker_factory`. Works better with
  descriptors.
* Explicitly delete ``exc_info`` variable when not needed, to help the
  garbage collector.


Version 1.10.0
--------------

Released 2014-08-14

* Entrypoint providers' handle_result is now able to manipulate and modify and
  return the ``(result, exc_info)`` tuple. This enables default post-processing
  (e.g. serialization, translations)
* Added serialization safety to legacy RPC entrypoint.


Version 1.9.1
-------------

Released 2014-08-12

* Bugfix to exception handling in ``nameko.legacy.dependencies``


Version 1.9.0
-------------

Released 2014-07-15

* No longer relying on eventlet for standalone RPC proxy timeouts.
* Introduced RPC entrypoints compatible with the 'legacy' proxy.


Version 1.8.2
-------------

Released 2014-07-07

* Documentation generator accepts a function listing event classes and adds
  to output accordingly.


Version 1.8.1
-------------

Released 2014-06-23

* Adding ``wait_for_worker_idle`` test helper.

Version 1.8.0
-------------

Released 2014-06-13

* Now passing ``exc_info`` tuples instead of bare exceptions to
  ``worker_result`` and ``handle_result``, to enable exception processing in
  non-worker greenthreads.

Version 1.7.2
-------------

Released 2014-06-10

* :meth:`~nameko.containers.ServiceContainer._run_worker` now calls any
  ``handle_result`` method before dependency teardown.
* Serialization errors now generate a specific error message rather
  than bubbling into the container.
* Minor change to ``nameko_doc`` output.

Version 1.7.1
-------------

Released 2014-05-20

* Added ``language``, ``auth_token`` and ``user_id`` dependency providers to
  make context data available to service workers.
* Refactored constants into their own module.
* Minor test changes to enable testing on shared rabbit brokers.

Version 1.7.0
-------------

Released 2014-05-07

* :meth:`~nameko.containers.ServiceContainer.spawn_worker` now throws
  :class:`~nameko.exceptions.ContainerBeingKilled` if a ``kill`` is
  in progress, since some providers may already be dead. Providers should catch
  this and e.g. requeue rpc messages. There is a race condition between
  completing the kill sequence and remaining entrypoints firing.


Version 1.6.1
-------------

Released 2014-04-03

* Revert changes to legacy exception serialization to maintain backwards
  compatibility with old clients.
* Add forwards compatibility for future clients that wish to serialize
  exceptions into more data
* Promote conftest rabbit manipulations to test helpers


Version 1.6.0
-------------

Released 2014-03-31

* Rename instance_factory to worker_factory
* Raise :class:`~nameko.exception.IncorrectSignature` instead of
  ``RemoteError: TypeError`` if an RPC method is called with invalid arguments.
* Raise :class:`~nameko.exception.MethodNotFound` instead of
  ``RemoteError: MethodNotFound`` if a non-existent RPC method is called.
* Let log handlers format warning messages so that aggregators group them
  correctly.
* Expose the entire dependency provider (rather than just the method name) to
  the worker context.


Version 1.5.0
-------------

Released 2014-03-27

* Improvements to :class:`~nameko.containers.ServiceContainer.kill()` enabling
  better tracebacks and cleaner teardown:

    - Using ``sys.exc_info`` to preserve tracebacks
    - No longer passing exception into
      :meth:`~nameko.extensions.DependencyProvider.kill()`, removing race
      conditions.
    - No longer requiring ``exc`` in
      :class:`~nameko.containers.ServiceContainer.kill()`

Version 1.4.1
-------------

Released 2014-03-26

* Adds the ``nameko_doc`` package, for easing the creation of service-oriented
  documentation.


Version 1.4.0
-------------

Released 2014-03-20

* RPC calls to non-existent services (no queues bound to the RPC exchange with
  the appropriate routing key) now raise an exception instead of hanging
  indefinitely. Note that calls to existing but non-running services (where the
  queue exists but has no consumer) behave as before.


Version 1.3.5
-------------

Released 2014-03-05

* Increased test resilience. Force-closing existing connections on rabbit
  reset


Version 1.3.4
-------------

Released 2014-03-05

* Use ``MagicMock`` for dependency replacement in test utilities
* Use ``autospec=True`` wherever possible when mocking
* Merge ``ServiceContainers`` into a single class


Version 1.3.3
-------------

Released 2014-02-25

* Bugfixes enabling reconnection to the broker if the connection is temporarily
  lost.


Version 1.3.2
-------------

Released 2014-02-13

* Dropping headers with a ``None`` value because they can't be serialized by
  AMQP


Version 1.3.1
-------------

Released 2014-01-28

* Add ``event_handler_cls`` kwarg to the ``event_handler`` entrypoint, for
  using a custom subclass of the ``EventHandler`` provider


Version 1.3.0
-------------

Released 2014-01-23

* Standalone RPC proxy interface changed to class with contextmanager interface
  and manual ``start()`` and ``stop()`` methods.
